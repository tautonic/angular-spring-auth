<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.pykl</groupId>
    <artifactId>babson.gcee</artifactId>
    <packaging>war</packaging>
    <version>0.9-SNAPSHOT</version>

    <name>Babson Global Consortium Website</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <slf4j-version>1.7.2</slf4j-version>
        <aws-version>1.3.26</aws-version>
        <log4j-version>1.2.17</log4j-version>
        <jetty-version>8.1.5.v20120716</jetty-version>
        <ringo-version>0.9.0-alpha-6</ringo-version>
        <stick-version>0.1.0-alpha-7</stick-version>
        <trimpath-version>1.0.7</trimpath-version>
        <spring-version>3.1.3.RELEASE</spring-version>
        <springsec-version>3.1.3.RELEASE</springsec-version>
        <store-version>1.0.6-SNAPSHOT</store-version>
        <springext-version>1.0.9</springext-version>
        <beanstalk-version>1.0.4</beanstalk-version>
        <beanstalk.environment.name>${environment}-babson-gcee</beanstalk.environment.name>
        <beanstalk.s3.name>${environment}.${project.groupId}.${project.artifactId}.images</beanstalk.s3.name>
    </properties>

    <prerequisites>
        <maven>2.2.1</maven>
    </prerequisites>

    <dependencies>

        <!-- RingoJS & Stick -->

        <dependency>
            <groupId>org.ringojs</groupId>
            <artifactId>ringojs</artifactId>
            <version>${ringo-version}</version>
        </dependency>

        <dependency>
            <groupId>org.ringojs</groupId>
            <artifactId>stick</artifactId>
            <version>${stick-version}</version>
        </dependency>

        <dependency>
            <groupId>org.pykl.ringojs</groupId>
            <artifactId>spring-ext</artifactId>
            <version>${springext-version}</version>
        </dependency>

        <!-- TrimPath Templates -->

        <dependency>
            <groupId>org.pykl.ringojs</groupId>
            <artifactId>trimpath</artifactId>
            <version>${trimpath-version}</version>
        </dependency>


        <!-- SSJS Persistence -->

        <dependency>
            <groupId>com.zocia.platform</groupId>
            <artifactId>store-js</artifactId>
            <version>${store-version}</version>
        </dependency>

        <!-- Jetty's HTTP Client -->

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-client</artifactId>
            <version>${jetty-version}</version>
        </dependency>

        <!-- Amazon AWS SDK -->

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk</artifactId>
            <version>${aws-version}</version>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Logging -->

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j-version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j-version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j-version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Spring 3 Dependencies -->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring-version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${springsec-version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${springsec-version}</version>
        </dependency>

        <!-- Java Servlet Dependencies -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>babson-gc</finalName>

        <plugins>

            <plugin>
                <groupId>org.pykl.maven.plugins</groupId>
                <artifactId>maven-beanstalk-plugin</artifactId>
                <version>${beanstalk-version}</version>
                <configuration>
                    <accessKey>${aws.access_key}</accessKey>
                    <secretKey>${aws.secret_key}</secretKey>
                    <applicationName>${project.groupId}.${project.artifactId}</applicationName>
                    <environmentName>${beanstalk.environment.name}</environmentName>
                    <s3Bucket>${beanstalk.s3.name}</s3Bucket>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty-version}</version>
                <configuration>
                    <webAppConfig>
                        <contextPath>/gc</contextPath>
                        <descriptor>${project.build.directory}/web.xml</descriptor>
                    </webAppConfig>
                    <connectors>
                        <connector
                                implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            <port>8080</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>
                    <stopKey>abcdef</stopKey>
                    <stopPort>8081</stopPort>
                </configuration>
            </plugin>

            <!-- https://github.com/searls/jasmine-maven-plugin -->
            <plugin>
                <groupId>com.github.searls</groupId>
                <artifactId>jasmine-maven-plugin</artifactId>
                <version>1.2.0.0</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <preloadSources>
                        <source>${project.basedir}/test/lib/jquery-1.8.3.js</source>
                        <source>${project.basedir}/src/main/webapp/lib/angular/angular.js</source>
                        <source>${project.basedir}/src/main/webapp/lib/angular/angular-resource.js</source>
                        <source>${project.basedir}/test/lib/angular/angular-mocks.js</source>
                    </preloadSources>
                    <sourceIncludes>
                        <include>js/*.js</include>
                        <include>lib/pyklsecurity/*.js</include>
                        <include>lib/pykldiscuss/*.js</include>
                    </sourceIncludes>
                    <specIncludes>
                        <include>${project.basedir}/test/lib/angular/angular-mocks.js</include>
                        <include>**/*.js</include> <!-- This is catching your tests. -->
                    </specIncludes>
                    <jsSrcDir>${project.basedir}/src/main/webapp</jsSrcDir>
                    <jsTestSrcDir>${project.basedir}/test/unit</jsTestSrcDir>
                    <junitXmlReportFileName>TEST-RESULTS.xml</junitXmlReportFileName>
                    <!--<customRunnerTemplate>${project.basedir}/test/resources/customRunner.template</customRunnerTemplate>-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty-version}</version>
                <configuration>
                    <!-- Causes Jetty to re-initialize when config files like web.xml or Java
                         classes are edited. Not sure how useful this is at the moment. - jc
                    -->
                    <!--<scanIntervalSeconds>10</scanIntervalSeconds>-->
                    <webAppConfig>
                        <!-- Every project should be developed so the application can be deployed to
                             a path other than '/'. Setting the context path to any value ensures
                             the context path is considered during development.
                         -->
                        <contextPath>/myapp</contextPath>
                        <descriptor>${project.build.directory}/web.xml</descriptor>
                    </webAppConfig>
                    <systemProperties>
                        <systemProperty>
                            <name>spring.profiles.active</name>
                            <value>testing</value>
                        </systemProperty>
                    </systemProperties>
                    <connectors>
                        <connector
                                implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            <port>9302</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>
                    <stopPort>9303</stopPort>
                    <stopKey>bar</stopKey>
                </configuration>
                <executions>
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <!--suppress MavenModelInspection -->
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <scanIntervalSeconds>0</scanIntervalSeconds>
                            <daemon>true</daemon>
                            <!--<useTestClasspath>true</useTestClasspath>-->
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <!--suppress MavenModelInspection -->
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>

        <!-- Allow property substitution filtering on all files in src/main/resources -->
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>${basedir}/src/main/resources</directory>
            </resource>
        </resources>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <environment>dev</environment>

                <!-- The URL to access web services from the gc platform. -->
                <zociaUrl>http://localhost:9300/myapp/api</zociaUrl>
                <localUrl>http://localhost:8080/gc/api</localUrl>

                <!-- Hazelcast configuration
                     hz.name - Specifies a unique name for the hazelcast cluster.
                     hz.multicast.enabled - true if used to locate cluster members in an environment
                         supporting multicast. (used only for development)
                     hz.aws.enabled - true if deployed to amazon ec2 environment where multicast is
                         not supported.
                -->
                <hz.name>hz-com.pykl.babsongc-${environment}</hz.name>
                <hz.multicast.enabled>false</hz.multicast.enabled>
                <hz.aws.enabled>false</hz.aws.enabled>

                <aws.s3.access_key>AKIAIO5RYV6PBMMEM5IA</aws.s3.access_key>
                <aws.s3.secret_key>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</aws.s3.secret_key>
                <aws.s3.bucket>qa.zocia.upload.files</aws.s3.bucket>
            </properties>
        </profile>
        <profile>
            <id>qa</id>
            <properties>
                <environment>qa</environment>
                <!-- The URL to access web services from the gcplatform. -->
                <zociaUrl>http://qa-zocia.elasticbeanstalk.com/api</zociaUrl>
                <localUrl>http://localhost/api</localUrl>

                <!-- Hazelcast configuration
                     hz.name - Specifies a unique name for the hazelcast cluster.
                     hz.multicast.enabled - true if used to locate cluster members in an environment
                         supporting multicast. (used only for development)
                     hz.aws.enabled - true if deployed to amazon ec2 environment where multicast is
                         not supported.
                -->
                <hz.name>hz-babsongc-${environment}</hz.name>
                <hz.multicast.enabled>false</hz.multicast.enabled>
                <hz.aws.enabled>true</hz.aws.enabled>

                <!-- Amazon Web Services configuration
                -->
                <aws.access_key>${babsongc.qa.aws.access_key}</aws.access_key>
                <aws.secret_key>${babsongc.qa.aws.secret_key}</aws.secret_key>

                <aws.s3.access_key>AKIAIO5RYV6PBMMEM5IA</aws.s3.access_key>
                <aws.s3.secret_key>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</aws.s3.secret_key>
                <aws.s3.bucket>qa.zocia.upload.files</aws.s3.bucket>

                <beanstalk.environment.name>${environment}-babson-gcee</beanstalk.environment.name>
                <beanstalk.s3.name>${environment}.${project.groupId}.${project.artifactId}.images</beanstalk.s3.name>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <environment>prod</environment>
                <!-- The URL to access web services from the gcplatform. -->
                <zociaUrl>http://prod-zocia.elasticbeanstalk.com/api</zociaUrl>

                <!-- Hazelcast configuration
                     hz.name - Specifies a unique name for the hazelcast cluster.
                     hz.multicast.enabled - true if used to locate cluster members in an environment
                         supporting multicast. (used only for development)
                     hz.aws.enabled - true if deployed to amazon ec2 environment where multicast is
                         not supported.
                -->
                <hz.name>hz-babsongc-${environment}</hz.name>
                <hz.multicast.enabled>false</hz.multicast.enabled>
                <hz.aws.enabled>true</hz.aws.enabled>

                <!-- Amazon Web Services configuration
                -->
                <aws.access_key>${babsongc.qa.aws.access_key}</aws.access_key>
                <aws.secret_key>${babsongc.qa.aws.secret_key}</aws.secret_key>
            </properties>
        </profile>
    </profiles>
</project>
